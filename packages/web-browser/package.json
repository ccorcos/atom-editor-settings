{
  "name": "web-browser",
  "main": "./lib/web-browser",
  "version": "0.2.3",
  "description": "A web browser that runs seamlessly in the Atom editor.",
  "activationEvents": [],
  "repository": {
    "type": "git",
    "url": "https://github.com/mark-hahn/web-browser"
  },
  "license": "MIT",
  "engines": {
    "atom": ">0.120.0"
  },
  "dependencies": {
    "emissary": "^1.3.1"
  },
  "readme": "# web-browser package\n\nA web browser that runs seamlessly in the Atom editor\n\n![Animated GIF](https://github.com/mark-hahn/web-browser/blob/master/screenshots/browser.gif?raw=true)\n\nThis is a web browser tightly integrated into the Atom editor.  The web pages appear in the normal editor tabs.  The pages are fully functional with scripting and linking. A browser toolbar appears at the top of the Atom window to allow simple webpage navigation.\n\nThe browser is quite useful for testing a web page inside the same programming editor being used for development.  Splitting panes allow code to be seen next to the web page.\n\nThe browser has a simple API for other Atom packages to use.  @kgrossjo on the Atom discussion board suggested a package that allows clicking on a word in source code and showing the web page documention for the word.\n\n### News (2014-11-02)\n\nThe package `command-toolbar` now supports buttons to save webpages and open them at any time with a single click.  This means that it can act as a \"favorites\" toolbar for this `web-browser` package.  It also provides buttons to execute any Atom command and open any text file, just like using the file tree.\n\n## Usage\n  \n- Install with `apm install web-browser`\n- Press `ctrl-alt-B` (`web-browser:toggle`) and a toolbar will appear above the tabs\n- Enter a url and press enter\n- To later create a new tab use ctrl-enter instead\n- Press `ctrl-alt-B` again to refocus input\n- Press `ctrl-alt-B` again to close toolbar\n- Click on globe in toolbar to close the toolbar (secret feature)\n\n## API\n\nThe API is not documented yet but the code in `lib/web-browser.coffee` contains all methods needed.  The `webBrowser` object is available as `atom.webBrowser` globally.  To open a page use `createPage`.  For example, to open the apple.com web page use `atom.webBrowser.createPage 'http://apple.com'`.\n\n## Known Problems\n\n- Missing features that will be added soon\n  - Bookmarks\n  - Recently visited sites\n  - Options\n  \n  \n- Missing features that may be added\n  - Uploads and Downloads\n  \n  \n- Features that will probably not be added\n  - Plugins like Flash and Silverlight\n  - Chrome Extensions (this isn't chrome (grin))\n  \n  \n- Other\n  - Tab keypresses are stolen from editor tabs\n    - Close web browser toolbar to work around\n  - Ctrl-click is ignored\n  - Back/forward buttons reload pages\n  - Same-origin problems from iFrame\n    - Most of these have been fixed including the crashes\n  \n  \n## License\n\nCopyright Mark Hahn by MIT license\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/mark-hahn/web-browser/issues"
  },
  "homepage": "https://github.com/mark-hahn/web-browser",
  "_id": "web-browser@0.2.3",
  "dist": {
    "shasum": "eeaf585b9ce5de7a4c42d61cafc7f72cefd883fb"
  },
  "_resolved": "/private/var/folders/x5/mdr8syvj7lsb_sg_pr0j7y_h0000gn/T/d-1141021-97972-1geqiig/package.tgz",
  "_from": "/private/var/folders/x5/mdr8syvj7lsb_sg_pr0j7y_h0000gn/T/d-1141021-97972-1geqiig/package.tgz",
  "_atomModuleCache": {
    "version": 1,
    "dependencies": [
      {
        "name": "emissary",
        "version": "1.3.1",
        "path": "node_modules/emissary/lib/emissary.js"
      },
      {
        "name": "harmony-collections",
        "version": "0.3.7",
        "path": "node_modules/emissary/node_modules/harmony-collections/harmony-collections.js"
      },
      {
        "name": "mixto",
        "version": "1.0.0",
        "path": "node_modules/emissary/node_modules/mixto/lib/mixin.js"
      },
      {
        "name": "property-accessors",
        "version": "1.1.0",
        "path": "node_modules/emissary/node_modules/property-accessors/lib/property-accessors.js"
      },
      {
        "name": "harmony-collections",
        "version": "0.3.7",
        "path": "node_modules/emissary/node_modules/property-accessors/node_modules/harmony-collections/harmony-collections.js"
      },
      {
        "name": "underscore-plus",
        "version": "1.6.1",
        "path": "node_modules/emissary/node_modules/underscore-plus/lib/underscore-plus.js"
      },
      {
        "name": "underscore",
        "version": "1.6.0",
        "path": "node_modules/emissary/node_modules/underscore-plus/node_modules/underscore/underscore.js"
      }
    ],
    "extensions": {
      ".coffee": [
        "lib/history.coffee",
        "lib/omnibox-view.coffee",
        "lib/page-view.coffee",
        "lib/page.coffee",
        "lib/toolbar-view.coffee",
        "lib/toolbar.coffee",
        "lib/web-browser.coffee"
      ],
      ".js": [
        "node_modules/emissary/lib/behavior.js",
        "node_modules/emissary/lib/emissary.js",
        "node_modules/emissary/lib/emitter.js",
        "node_modules/emissary/lib/helpers.js",
        "node_modules/emissary/lib/signal.js",
        "node_modules/emissary/lib/subscriber.js",
        "node_modules/emissary/lib/subscription.js",
        "node_modules/emissary/node_modules/harmony-collections/harmony-collections.js",
        "node_modules/emissary/node_modules/harmony-collections/harmony-collections.min.js",
        "node_modules/emissary/node_modules/mixto/lib/mixin.js",
        "node_modules/emissary/node_modules/property-accessors/lib/property-accessors.js",
        "node_modules/emissary/node_modules/property-accessors/node_modules/harmony-collections/harmony-collections.js",
        "node_modules/emissary/node_modules/property-accessors/node_modules/harmony-collections/harmony-collections.min.js",
        "node_modules/emissary/node_modules/underscore-plus/lib/underscore-plus.js",
        "node_modules/emissary/node_modules/underscore-plus/node_modules/underscore/underscore-min.js",
        "node_modules/emissary/node_modules/underscore-plus/node_modules/underscore/underscore.js"
      ],
      ".json": [
        "node_modules/emissary/node_modules/harmony-collections/package.json",
        "node_modules/emissary/node_modules/mixto/package.json",
        "node_modules/emissary/node_modules/property-accessors/node_modules/harmony-collections/package.json",
        "node_modules/emissary/node_modules/property-accessors/package.json",
        "node_modules/emissary/node_modules/underscore-plus/node_modules/underscore/package.json",
        "node_modules/emissary/node_modules/underscore-plus/package.json",
        "node_modules/emissary/package.json",
        "package.json"
      ]
    },
    "folders": [
      {
        "paths": [
          "lib",
          ""
        ],
        "dependencies": {
          "emissary": "^1.3.1"
        }
      },
      {
        "paths": [
          "node_modules/emissary/lib",
          "node_modules/emissary"
        ],
        "dependencies": {
          "underscore-plus": "1.x",
          "mixto": "1.x",
          "property-accessors": "^1.1"
        }
      },
      {
        "paths": [
          "node_modules/emissary/node_modules/property-accessors/lib",
          "node_modules/emissary/node_modules/property-accessors"
        ],
        "dependencies": {
          "mixto": "1.x"
        }
      },
      {
        "paths": [
          "node_modules/emissary/node_modules/underscore-plus/lib",
          "node_modules/emissary/node_modules/underscore-plus"
        ],
        "dependencies": {
          "underscore": "~1.6.0"
        }
      }
    ]
  }
}